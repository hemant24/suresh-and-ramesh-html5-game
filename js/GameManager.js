this.sr = this.sr ||{};(function(){var GameManager = function(stage,timeStage){	this.stage= stage;	this.timeStage = timeStage;	this.levelManager=null;	this.time =0;	this.lastTime = 0;	this.timeHolder =null;	this.isColliding = false	this.lastCollideTime = 0;	this.gameState = sr.GameStateEnum.running; // 0-> running , 1-> won , 2->paused , 3-> lost}var p = GameManager.prototype ;p.start = function(){	this.timeStage.removeAllChildren();	this.levelManager = new sr.LevelManager(stage);	this.timeHolder = new createjs.Text("", "76px Arial", "#000");	this.timeStage.addChild(this.timeHolder);	this.lastTime = new Date();	this.nextLevel();}p.nextLevel = function(level){	this.levelManager.loadNextLevel(level);	this.time = this.levelManager.time	this.timeHolder.text = this.time;	this.gameState= sr.GameStateEnum.running;}p.restartLevel = function(){	this.nextLevel(this.levelManager.currentLevel);}p.update = function(){	for( var i in this.levelManager.actors){		var actor = this.levelManager.actors[i];		actor.update();		if(this.checkCollision(actor,this.levelManager.walls)){			this.isColliding = true;			actor.handleCollision(true);		}else{			actor.handleCollision(false);		}	}		if(this.isColliding){			soundManager.playShock();			if(this.lastCollideTime == 0){				this.time = this.time - 3;				this.lastCollideTime = new Date();			}else if( ((new Date()) - this.lastCollideTime) > 1000 ){							this.time = this.time -3;				this.lastCollideTime =new Date();			}						this.isColliding= false;			this.lastTime = new Date();		}else{			//this.isColliding=false;			this.lastCollideTime=0;			var dx = (new Date()) - this.lastTime;			if(dx > 1000 && this.time >0){				this.time--;				this.lastTime = new Date();			}		}	this.timeHolder.text = this.time	this.isGameOverWin();	}p.isGameOverWin = function(){	if( this.time <= 0){		this.timeHolder.text=0;		this.gameState = sr.GameStateEnum.over		soundManager.playGameOver();	}else{					var suresh = this.levelManager.actors[0];			var ramesh = this.levelManager.actors[1];			if( this.collides({x:suresh.spawnX-30,y:suresh.spawnY-30, width:60 , height:60}, ramesh) && this.collides({x:ramesh.spawnX-30,y:ramesh.spawnY-30, width:60 , height:60}, suresh)){				this.gameState = sr.GameStateEnum.won				soundManager.playWin();				if(this.levelManager.currentLevel == this.levelManager.lastLevel){					this.gameState = sr.GameStateEnum.lastLevelWon									}			}						}}p.checkCollision = function (actor,walls){ for(i in walls){		var wall = walls[i];		if( this.collides(wall, actor)){			return true;		}	}}p.initialize = function(){}p.collides = function (a, b) {	  return a.x < b.x + b.width &&			 a.x + a.width > b.x &&			 a.y < b.y + b.height &&			 a.y + a.height > b.y;	}	sr.GameManager = GameManager;}());